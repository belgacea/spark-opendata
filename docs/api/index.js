Index.PACKAGES = {"org.example" : [], "org.example.utils" : [{"name" : "org.example.utils.ConfigurationHelper", "members_trait" : [{"label" : "getConfigPropArray", "tail" : "(name: String, default: Array[String]): Array[String]", "member" : "org.example.utils.ConfigurationHelper.getConfigPropArray", "link" : "org\/example\/utils\/ConfigurationHelper.html#getConfigPropArray(name:String,default:Array[String]):Array[String]", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String, default: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/utils\/ConfigurationHelper.html#getConfigProp(name:String,default:String):String", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/utils\/ConfigurationHelper.html#getConfigProp(name:String):String", "kind" : "def"}, {"label" : "csvCharsetEncoding", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvCharsetEncoding", "link" : "org\/example\/utils\/ConfigurationHelper.html#csvCharsetEncoding:String", "kind" : "lazy val"}, {"label" : "csvDelimiter", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvDelimiter", "link" : "org\/example\/utils\/ConfigurationHelper.html#csvDelimiter:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevel", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.persistenceStorageLevel", "link" : "org\/example\/utils\/ConfigurationHelper.html#persistenceStorageLevel:String", "kind" : "lazy val"}, {"label" : "enableCachePersistence", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.enableCachePersistence", "link" : "org\/example\/utils\/ConfigurationHelper.html#enableCachePersistence:Boolean", "kind" : "lazy val"}, {"label" : "explainExecutionPlan", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.explainExecutionPlan", "link" : "org\/example\/utils\/ConfigurationHelper.html#explainExecutionPlan:Boolean", "kind" : "lazy val"}, {"label" : "properties", "tail" : "(): Array[String]", "member" : "org.example.utils.PropertyHelper.properties", "link" : "org\/example\/utils\/ConfigurationHelper.html#properties:Array[String]", "kind" : "def"}, {"label" : "csvCharsetEncodingProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvCharsetEncodingProperty", "link" : "org\/example\/utils\/ConfigurationHelper.html#csvCharsetEncodingProperty:String", "kind" : "lazy val"}, {"label" : "csvDelimiterProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvDelimiterProperty", "link" : "org\/example\/utils\/ConfigurationHelper.html#csvDelimiterProperty:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevelProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.persistenceStorageLevelProperty", "link" : "org\/example\/utils\/ConfigurationHelper.html#persistenceStorageLevelProperty:String", "kind" : "val"}, {"label" : "enableCachePersistenceProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.enableCachePersistenceProperty", "link" : "org\/example\/utils\/ConfigurationHelper.html#enableCachePersistenceProperty:String", "kind" : "val"}, {"label" : "explainExecutionPlanProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.explainExecutionPlanProperty", "link" : "org\/example\/utils\/ConfigurationHelper.html#explainExecutionPlanProperty:String", "kind" : "val"}, {"label" : "sql", "tail" : ": SQLContext", "member" : "org.example.utils.SessionHandler.sql", "link" : "org\/example\/utils\/ConfigurationHelper.html#sql:org.apache.spark.sql.SQLContext", "kind" : "lazy val"}, {"label" : "context", "tail" : ": SparkContext", "member" : "org.example.utils.SessionHandler.context", "link" : "org\/example\/utils\/ConfigurationHelper.html#context:org.apache.spark.SparkContext", "kind" : "lazy val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.utils.SessionHandler.log", "link" : "org\/example\/utils\/ConfigurationHelper.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/utils\/ConfigurationHelper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/utils\/ConfigurationHelper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/utils\/ConfigurationHelper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/utils\/ConfigurationHelper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/utils\/ConfigurationHelper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/utils\/ConfigurationHelper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/utils\/ConfigurationHelper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/ConfigurationHelper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/ConfigurationHelper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/ConfigurationHelper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/utils\/ConfigurationHelper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/utils\/ConfigurationHelper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/utils\/ConfigurationHelper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/utils\/ConfigurationHelper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/utils\/ConfigurationHelper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/utils\/ConfigurationHelper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/utils\/ConfigurationHelper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/utils\/ConfigurationHelper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/utils\/ConfigurationHelper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spark", "tail" : "(): SparkSession", "member" : "org.example.utils.SessionHandler.spark", "link" : "org\/example\/utils\/ConfigurationHelper.html#spark:org.apache.spark.sql.SparkSession", "kind" : "implicit abstract def"}], "shortDescription" : "Helper trait used to retrieve Spark configuration properties", "trait" : "org\/example\/utils\/ConfigurationHelper.html", "kind" : "trait"}, {"name" : "org.example.utils.CSVHelper", "members_trait" : [{"label" : "writeToCSV", "tail" : "(dataframe: DataFrame, path: String, partitionBy: Option[Array[String]], header: Boolean): Unit", "member" : "org.example.utils.CSVHelper.writeToCSV", "link" : "org\/example\/utils\/CSVHelper.html#writeToCSV(dataframe:org.apache.spark.sql.DataFrame,path:String,partitionBy:Option[Array[String]],header:Boolean):Unit", "kind" : "def"}, {"label" : "loadCSV", "tail" : "(path: String, schema: Option[StructType], delimiter: Option[String], header: Boolean, timestampFormat: String): DataFrame", "member" : "org.example.utils.CSVHelper.loadCSV", "link" : "org\/example\/utils\/CSVHelper.html#loadCSV(path:String,schema:Option[org.apache.spark.sql.types.StructType],delimiter:Option[String],header:Boolean,timestampFormat:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "filterURIUnsafeCharacter", "tail" : "(string: String): String", "member" : "org.example.utils.FileHelper.filterURIUnsafeCharacter", "link" : "org\/example\/utils\/CSVHelper.html#filterURIUnsafeCharacter(string:String):String", "kind" : "def"}, {"label" : "getConfigPropArray", "tail" : "(name: String, default: Array[String]): Array[String]", "member" : "org.example.utils.ConfigurationHelper.getConfigPropArray", "link" : "org\/example\/utils\/CSVHelper.html#getConfigPropArray(name:String,default:Array[String]):Array[String]", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String, default: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/utils\/CSVHelper.html#getConfigProp(name:String,default:String):String", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/utils\/CSVHelper.html#getConfigProp(name:String):String", "kind" : "def"}, {"label" : "csvCharsetEncoding", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvCharsetEncoding", "link" : "org\/example\/utils\/CSVHelper.html#csvCharsetEncoding:String", "kind" : "lazy val"}, {"label" : "csvDelimiter", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvDelimiter", "link" : "org\/example\/utils\/CSVHelper.html#csvDelimiter:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevel", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.persistenceStorageLevel", "link" : "org\/example\/utils\/CSVHelper.html#persistenceStorageLevel:String", "kind" : "lazy val"}, {"label" : "enableCachePersistence", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.enableCachePersistence", "link" : "org\/example\/utils\/CSVHelper.html#enableCachePersistence:Boolean", "kind" : "lazy val"}, {"label" : "explainExecutionPlan", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.explainExecutionPlan", "link" : "org\/example\/utils\/CSVHelper.html#explainExecutionPlan:Boolean", "kind" : "lazy val"}, {"label" : "properties", "tail" : "(): Array[String]", "member" : "org.example.utils.PropertyHelper.properties", "link" : "org\/example\/utils\/CSVHelper.html#properties:Array[String]", "kind" : "def"}, {"label" : "csvCharsetEncodingProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvCharsetEncodingProperty", "link" : "org\/example\/utils\/CSVHelper.html#csvCharsetEncodingProperty:String", "kind" : "lazy val"}, {"label" : "csvDelimiterProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvDelimiterProperty", "link" : "org\/example\/utils\/CSVHelper.html#csvDelimiterProperty:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevelProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.persistenceStorageLevelProperty", "link" : "org\/example\/utils\/CSVHelper.html#persistenceStorageLevelProperty:String", "kind" : "val"}, {"label" : "enableCachePersistenceProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.enableCachePersistenceProperty", "link" : "org\/example\/utils\/CSVHelper.html#enableCachePersistenceProperty:String", "kind" : "val"}, {"label" : "explainExecutionPlanProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.explainExecutionPlanProperty", "link" : "org\/example\/utils\/CSVHelper.html#explainExecutionPlanProperty:String", "kind" : "val"}, {"label" : "sql", "tail" : ": SQLContext", "member" : "org.example.utils.SessionHandler.sql", "link" : "org\/example\/utils\/CSVHelper.html#sql:org.apache.spark.sql.SQLContext", "kind" : "lazy val"}, {"label" : "context", "tail" : ": SparkContext", "member" : "org.example.utils.SessionHandler.context", "link" : "org\/example\/utils\/CSVHelper.html#context:org.apache.spark.SparkContext", "kind" : "lazy val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.utils.SessionHandler.log", "link" : "org\/example\/utils\/CSVHelper.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/utils\/CSVHelper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/utils\/CSVHelper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/utils\/CSVHelper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/utils\/CSVHelper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/utils\/CSVHelper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/utils\/CSVHelper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/utils\/CSVHelper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/CSVHelper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/CSVHelper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/CSVHelper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/utils\/CSVHelper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/utils\/CSVHelper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/utils\/CSVHelper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/utils\/CSVHelper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/utils\/CSVHelper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/utils\/CSVHelper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/utils\/CSVHelper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/utils\/CSVHelper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/utils\/CSVHelper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spark", "tail" : "(): SparkSession", "member" : "org.example.utils.SessionHandler.spark", "link" : "org\/example\/utils\/CSVHelper.html#spark:org.apache.spark.sql.SparkSession", "kind" : "implicit abstract def"}], "shortDescription" : "Comma Separated Values helper functions for batch processing", "trait" : "org\/example\/utils\/CSVHelper.html", "kind" : "trait"}, {"name" : "org.example.utils.FileHelper", "members_trait" : [{"label" : "filterURIUnsafeCharacter", "tail" : "(string: String): String", "member" : "org.example.utils.FileHelper.filterURIUnsafeCharacter", "link" : "org\/example\/utils\/FileHelper.html#filterURIUnsafeCharacter(string:String):String", "kind" : "def"}, {"label" : "getConfigPropArray", "tail" : "(name: String, default: Array[String]): Array[String]", "member" : "org.example.utils.ConfigurationHelper.getConfigPropArray", "link" : "org\/example\/utils\/FileHelper.html#getConfigPropArray(name:String,default:Array[String]):Array[String]", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String, default: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/utils\/FileHelper.html#getConfigProp(name:String,default:String):String", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/utils\/FileHelper.html#getConfigProp(name:String):String", "kind" : "def"}, {"label" : "csvCharsetEncoding", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvCharsetEncoding", "link" : "org\/example\/utils\/FileHelper.html#csvCharsetEncoding:String", "kind" : "lazy val"}, {"label" : "csvDelimiter", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvDelimiter", "link" : "org\/example\/utils\/FileHelper.html#csvDelimiter:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevel", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.persistenceStorageLevel", "link" : "org\/example\/utils\/FileHelper.html#persistenceStorageLevel:String", "kind" : "lazy val"}, {"label" : "enableCachePersistence", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.enableCachePersistence", "link" : "org\/example\/utils\/FileHelper.html#enableCachePersistence:Boolean", "kind" : "lazy val"}, {"label" : "explainExecutionPlan", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.explainExecutionPlan", "link" : "org\/example\/utils\/FileHelper.html#explainExecutionPlan:Boolean", "kind" : "lazy val"}, {"label" : "properties", "tail" : "(): Array[String]", "member" : "org.example.utils.PropertyHelper.properties", "link" : "org\/example\/utils\/FileHelper.html#properties:Array[String]", "kind" : "def"}, {"label" : "csvCharsetEncodingProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvCharsetEncodingProperty", "link" : "org\/example\/utils\/FileHelper.html#csvCharsetEncodingProperty:String", "kind" : "lazy val"}, {"label" : "csvDelimiterProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvDelimiterProperty", "link" : "org\/example\/utils\/FileHelper.html#csvDelimiterProperty:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevelProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.persistenceStorageLevelProperty", "link" : "org\/example\/utils\/FileHelper.html#persistenceStorageLevelProperty:String", "kind" : "val"}, {"label" : "enableCachePersistenceProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.enableCachePersistenceProperty", "link" : "org\/example\/utils\/FileHelper.html#enableCachePersistenceProperty:String", "kind" : "val"}, {"label" : "explainExecutionPlanProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.explainExecutionPlanProperty", "link" : "org\/example\/utils\/FileHelper.html#explainExecutionPlanProperty:String", "kind" : "val"}, {"label" : "sql", "tail" : ": SQLContext", "member" : "org.example.utils.SessionHandler.sql", "link" : "org\/example\/utils\/FileHelper.html#sql:org.apache.spark.sql.SQLContext", "kind" : "lazy val"}, {"label" : "context", "tail" : ": SparkContext", "member" : "org.example.utils.SessionHandler.context", "link" : "org\/example\/utils\/FileHelper.html#context:org.apache.spark.SparkContext", "kind" : "lazy val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.utils.SessionHandler.log", "link" : "org\/example\/utils\/FileHelper.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/utils\/FileHelper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/utils\/FileHelper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/utils\/FileHelper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/utils\/FileHelper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/utils\/FileHelper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/utils\/FileHelper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/utils\/FileHelper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/FileHelper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/FileHelper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/FileHelper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/utils\/FileHelper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/utils\/FileHelper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/utils\/FileHelper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/utils\/FileHelper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/utils\/FileHelper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/utils\/FileHelper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/utils\/FileHelper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/utils\/FileHelper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/utils\/FileHelper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spark", "tail" : "(): SparkSession", "member" : "org.example.utils.SessionHandler.spark", "link" : "org\/example\/utils\/FileHelper.html#spark:org.apache.spark.sql.SparkSession", "kind" : "implicit abstract def"}], "shortDescription" : "File helper functions", "trait" : "org\/example\/utils\/FileHelper.html", "kind" : "trait"}, {"name" : "org.example.utils.ParquetHelper", "members_trait" : [{"label" : "writeToParquetBy", "tail" : "(dataframe: Dataset[_], path: String, partitions: Array[String]): Unit", "member" : "org.example.utils.ParquetHelper.writeToParquetBy", "link" : "org\/example\/utils\/ParquetHelper.html#writeToParquetBy(dataframe:org.apache.spark.sql.Dataset[_],path:String,partitions:Array[String]):Unit", "kind" : "def"}, {"label" : "filterURIUnsafeCharacter", "tail" : "(string: String): String", "member" : "org.example.utils.FileHelper.filterURIUnsafeCharacter", "link" : "org\/example\/utils\/ParquetHelper.html#filterURIUnsafeCharacter(string:String):String", "kind" : "def"}, {"label" : "getConfigPropArray", "tail" : "(name: String, default: Array[String]): Array[String]", "member" : "org.example.utils.ConfigurationHelper.getConfigPropArray", "link" : "org\/example\/utils\/ParquetHelper.html#getConfigPropArray(name:String,default:Array[String]):Array[String]", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String, default: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/utils\/ParquetHelper.html#getConfigProp(name:String,default:String):String", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/utils\/ParquetHelper.html#getConfigProp(name:String):String", "kind" : "def"}, {"label" : "csvCharsetEncoding", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvCharsetEncoding", "link" : "org\/example\/utils\/ParquetHelper.html#csvCharsetEncoding:String", "kind" : "lazy val"}, {"label" : "csvDelimiter", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvDelimiter", "link" : "org\/example\/utils\/ParquetHelper.html#csvDelimiter:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevel", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.persistenceStorageLevel", "link" : "org\/example\/utils\/ParquetHelper.html#persistenceStorageLevel:String", "kind" : "lazy val"}, {"label" : "enableCachePersistence", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.enableCachePersistence", "link" : "org\/example\/utils\/ParquetHelper.html#enableCachePersistence:Boolean", "kind" : "lazy val"}, {"label" : "explainExecutionPlan", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.explainExecutionPlan", "link" : "org\/example\/utils\/ParquetHelper.html#explainExecutionPlan:Boolean", "kind" : "lazy val"}, {"label" : "properties", "tail" : "(): Array[String]", "member" : "org.example.utils.PropertyHelper.properties", "link" : "org\/example\/utils\/ParquetHelper.html#properties:Array[String]", "kind" : "def"}, {"label" : "csvCharsetEncodingProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvCharsetEncodingProperty", "link" : "org\/example\/utils\/ParquetHelper.html#csvCharsetEncodingProperty:String", "kind" : "lazy val"}, {"label" : "csvDelimiterProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvDelimiterProperty", "link" : "org\/example\/utils\/ParquetHelper.html#csvDelimiterProperty:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevelProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.persistenceStorageLevelProperty", "link" : "org\/example\/utils\/ParquetHelper.html#persistenceStorageLevelProperty:String", "kind" : "val"}, {"label" : "enableCachePersistenceProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.enableCachePersistenceProperty", "link" : "org\/example\/utils\/ParquetHelper.html#enableCachePersistenceProperty:String", "kind" : "val"}, {"label" : "explainExecutionPlanProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.explainExecutionPlanProperty", "link" : "org\/example\/utils\/ParquetHelper.html#explainExecutionPlanProperty:String", "kind" : "val"}, {"label" : "sql", "tail" : ": SQLContext", "member" : "org.example.utils.SessionHandler.sql", "link" : "org\/example\/utils\/ParquetHelper.html#sql:org.apache.spark.sql.SQLContext", "kind" : "lazy val"}, {"label" : "context", "tail" : ": SparkContext", "member" : "org.example.utils.SessionHandler.context", "link" : "org\/example\/utils\/ParquetHelper.html#context:org.apache.spark.SparkContext", "kind" : "lazy val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.utils.SessionHandler.log", "link" : "org\/example\/utils\/ParquetHelper.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/utils\/ParquetHelper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/utils\/ParquetHelper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/utils\/ParquetHelper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/utils\/ParquetHelper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/utils\/ParquetHelper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/utils\/ParquetHelper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/utils\/ParquetHelper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/ParquetHelper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/ParquetHelper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/ParquetHelper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/utils\/ParquetHelper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/utils\/ParquetHelper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/utils\/ParquetHelper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/utils\/ParquetHelper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/utils\/ParquetHelper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/utils\/ParquetHelper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/utils\/ParquetHelper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/utils\/ParquetHelper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/utils\/ParquetHelper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spark", "tail" : "(): SparkSession", "member" : "org.example.utils.SessionHandler.spark", "link" : "org\/example\/utils\/ParquetHelper.html#spark:org.apache.spark.sql.SparkSession", "kind" : "implicit abstract def"}], "shortDescription" : "Parquet helper functions", "trait" : "org\/example\/utils\/ParquetHelper.html", "kind" : "trait"}, {"name" : "org.example.utils.PropertyHelper", "members_trait" : [{"label" : "properties", "tail" : "(): Array[String]", "member" : "org.example.utils.PropertyHelper.properties", "link" : "org\/example\/utils\/PropertyHelper.html#properties:Array[String]", "kind" : "def"}, {"label" : "csvCharsetEncodingProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvCharsetEncodingProperty", "link" : "org\/example\/utils\/PropertyHelper.html#csvCharsetEncodingProperty:String", "kind" : "lazy val"}, {"label" : "csvDelimiterProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvDelimiterProperty", "link" : "org\/example\/utils\/PropertyHelper.html#csvDelimiterProperty:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevelProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.persistenceStorageLevelProperty", "link" : "org\/example\/utils\/PropertyHelper.html#persistenceStorageLevelProperty:String", "kind" : "val"}, {"label" : "enableCachePersistenceProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.enableCachePersistenceProperty", "link" : "org\/example\/utils\/PropertyHelper.html#enableCachePersistenceProperty:String", "kind" : "val"}, {"label" : "explainExecutionPlanProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.explainExecutionPlanProperty", "link" : "org\/example\/utils\/PropertyHelper.html#explainExecutionPlanProperty:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/utils\/PropertyHelper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/utils\/PropertyHelper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/utils\/PropertyHelper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/utils\/PropertyHelper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/utils\/PropertyHelper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/utils\/PropertyHelper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/utils\/PropertyHelper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/PropertyHelper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/PropertyHelper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/PropertyHelper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/utils\/PropertyHelper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/utils\/PropertyHelper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/utils\/PropertyHelper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/utils\/PropertyHelper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/utils\/PropertyHelper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/utils\/PropertyHelper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/utils\/PropertyHelper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/utils\/PropertyHelper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/utils\/PropertyHelper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Configuration property helper", "trait" : "org\/example\/utils\/PropertyHelper.html", "kind" : "trait"}, {"name" : "org.example.utils.SessionHandler", "members_trait" : [{"label" : "sql", "tail" : ": SQLContext", "member" : "org.example.utils.SessionHandler.sql", "link" : "org\/example\/utils\/SessionHandler.html#sql:org.apache.spark.sql.SQLContext", "kind" : "lazy val"}, {"label" : "context", "tail" : ": SparkContext", "member" : "org.example.utils.SessionHandler.context", "link" : "org\/example\/utils\/SessionHandler.html#context:org.apache.spark.SparkContext", "kind" : "lazy val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.utils.SessionHandler.log", "link" : "org\/example\/utils\/SessionHandler.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/utils\/SessionHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/utils\/SessionHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/utils\/SessionHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/utils\/SessionHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/utils\/SessionHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/utils\/SessionHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/utils\/SessionHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/SessionHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/SessionHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/SessionHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/utils\/SessionHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/utils\/SessionHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/utils\/SessionHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/utils\/SessionHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/utils\/SessionHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/utils\/SessionHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/utils\/SessionHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/utils\/SessionHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/utils\/SessionHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spark", "tail" : "(): SparkSession", "member" : "org.example.utils.SessionHandler.spark", "link" : "org\/example\/utils\/SessionHandler.html#spark:org.apache.spark.sql.SparkSession", "kind" : "implicit abstract def"}], "shortDescription" : "Spark Session & Context references trait handler", "trait" : "org\/example\/utils\/SessionHandler.html", "kind" : "trait"}, {"name" : "org.example.utils.TestHelper", "members_trait" : [{"label" : "functionName", "tail" : "(name: String): String", "member" : "org.example.utils.TestHelper.functionName", "link" : "org\/example\/utils\/TestHelper.html#functionName(name:String):String", "kind" : "def"}, {"label" : "testName", "tail" : ": String", "member" : "org.example.utils.TestHelper.testName", "link" : "org\/example\/utils\/TestHelper.html#testName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/utils\/TestHelper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/utils\/TestHelper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/utils\/TestHelper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/utils\/TestHelper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/utils\/TestHelper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/utils\/TestHelper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/utils\/TestHelper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/TestHelper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/TestHelper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/utils\/TestHelper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/utils\/TestHelper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/utils\/TestHelper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/utils\/TestHelper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/utils\/TestHelper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/utils\/TestHelper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/utils\/TestHelper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/utils\/TestHelper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/utils\/TestHelper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/utils\/TestHelper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Test Helper trait", "trait" : "org\/example\/utils\/TestHelper.html", "kind" : "trait"}], "org.example.batch" : [{"name" : "org.example.batch.BatchToolBox", "shortDescription" : "Batch toolbox for Spark helper functions", "members_case class" : [{"label" : "getUnknownStreet", "tail" : "(dataFrame: DataFrame): DataFrame", "member" : "org.example.batch.BatchToolBox.getUnknownStreet", "link" : "org\/example\/batch\/package$$BatchToolBox.html#getUnknownStreet(dataFrame:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "maxVisitorByStreet", "tail" : "(dataFrame: DataFrame, accommodation: Boolean): DataFrame", "member" : "org.example.batch.BatchToolBox.maxVisitorByStreet", "link" : "org\/example\/batch\/package$$BatchToolBox.html#maxVisitorByStreet(dataFrame:org.apache.spark.sql.DataFrame,accommodation:Boolean):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getStreetColExpr", "tail" : "(column1: Column, column2: Column): Column", "member" : "org.example.batch.BatchToolBox.getStreetColExpr", "link" : "org\/example\/batch\/package$$BatchToolBox.html#getStreetColExpr(column1:org.apache.spark.sql.Column,column2:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "streetColEpxr", "tail" : ": Column", "member" : "org.example.batch.BatchToolBox.streetColEpxr", "link" : "org\/example\/batch\/package$$BatchToolBox.html#streetColEpxr:org.apache.spark.sql.Column", "kind" : "val"}, {"label" : "streetCol2Epxr", "tail" : ": Column", "member" : "org.example.batch.BatchToolBox.streetCol2Epxr", "link" : "org\/example\/batch\/package$$BatchToolBox.html#streetCol2Epxr:org.apache.spark.sql.Column", "kind" : "val"}, {"label" : "streetCol1Epxr", "tail" : ": Column", "member" : "org.example.batch.BatchToolBox.streetCol1Epxr", "link" : "org\/example\/batch\/package$$BatchToolBox.html#streetCol1Epxr:org.apache.spark.sql.Column", "kind" : "val"}, {"label" : "accommodationCol", "tail" : ": String", "member" : "org.example.batch.BatchToolBox.accommodationCol", "link" : "org\/example\/batch\/package$$BatchToolBox.html#accommodationCol:String", "kind" : "val"}, {"label" : "streetCol2", "tail" : ": String", "member" : "org.example.batch.BatchToolBox.streetCol2", "link" : "org\/example\/batch\/package$$BatchToolBox.html#streetCol2:String", "kind" : "val"}, {"label" : "streetCol1", "tail" : ": String", "member" : "org.example.batch.BatchToolBox.streetCol1", "link" : "org\/example\/batch\/package$$BatchToolBox.html#streetCol1:String", "kind" : "val"}, {"label" : "street", "tail" : ": String", "member" : "org.example.batch.BatchToolBox.street", "link" : "org\/example\/batch\/package$$BatchToolBox.html#street:String", "kind" : "val"}, {"label" : "address2Col", "tail" : ": String", "member" : "org.example.batch.BatchToolBox.address2Col", "link" : "org\/example\/batch\/package$$BatchToolBox.html#address2Col:String", "kind" : "val"}, {"label" : "address1Col", "tail" : ": String", "member" : "org.example.batch.BatchToolBox.address1Col", "link" : "org\/example\/batch\/package$$BatchToolBox.html#address1Col:String", "kind" : "val"}, {"label" : "streetRegex", "tail" : ": String", "member" : "org.example.batch.BatchToolBox.streetRegex", "link" : "org\/example\/batch\/package$$BatchToolBox.html#streetRegex:String", "kind" : "val"}, {"member" : "org.example.batch.BatchToolBox#<init>", "error" : "unsupported entity"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "org.example.batch.BatchToolBox.spark", "link" : "org\/example\/batch\/package$$BatchToolBox.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "writeToParquetBy", "tail" : "(dataframe: Dataset[_], path: String, partitions: Array[String]): Unit", "member" : "org.example.utils.ParquetHelper.writeToParquetBy", "link" : "org\/example\/batch\/package$$BatchToolBox.html#writeToParquetBy(dataframe:org.apache.spark.sql.Dataset[_],path:String,partitions:Array[String]):Unit", "kind" : "def"}, {"label" : "writeToCSV", "tail" : "(dataframe: DataFrame, path: String, partitionBy: Option[Array[String]], header: Boolean): Unit", "member" : "org.example.utils.CSVHelper.writeToCSV", "link" : "org\/example\/batch\/package$$BatchToolBox.html#writeToCSV(dataframe:org.apache.spark.sql.DataFrame,path:String,partitionBy:Option[Array[String]],header:Boolean):Unit", "kind" : "def"}, {"label" : "loadCSV", "tail" : "(path: String, schema: Option[StructType], delimiter: Option[String], header: Boolean, timestampFormat: String): DataFrame", "member" : "org.example.utils.CSVHelper.loadCSV", "link" : "org\/example\/batch\/package$$BatchToolBox.html#loadCSV(path:String,schema:Option[org.apache.spark.sql.types.StructType],delimiter:Option[String],header:Boolean,timestampFormat:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "filterURIUnsafeCharacter", "tail" : "(string: String): String", "member" : "org.example.utils.FileHelper.filterURIUnsafeCharacter", "link" : "org\/example\/batch\/package$$BatchToolBox.html#filterURIUnsafeCharacter(string:String):String", "kind" : "def"}, {"label" : "getConfigPropArray", "tail" : "(name: String, default: Array[String]): Array[String]", "member" : "org.example.utils.ConfigurationHelper.getConfigPropArray", "link" : "org\/example\/batch\/package$$BatchToolBox.html#getConfigPropArray(name:String,default:Array[String]):Array[String]", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String, default: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/batch\/package$$BatchToolBox.html#getConfigProp(name:String,default:String):String", "kind" : "def"}, {"label" : "getConfigProp", "tail" : "(name: String): String", "member" : "org.example.utils.ConfigurationHelper.getConfigProp", "link" : "org\/example\/batch\/package$$BatchToolBox.html#getConfigProp(name:String):String", "kind" : "def"}, {"label" : "csvCharsetEncoding", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvCharsetEncoding", "link" : "org\/example\/batch\/package$$BatchToolBox.html#csvCharsetEncoding:String", "kind" : "lazy val"}, {"label" : "csvDelimiter", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.csvDelimiter", "link" : "org\/example\/batch\/package$$BatchToolBox.html#csvDelimiter:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevel", "tail" : ": String", "member" : "org.example.utils.ConfigurationHelper.persistenceStorageLevel", "link" : "org\/example\/batch\/package$$BatchToolBox.html#persistenceStorageLevel:String", "kind" : "lazy val"}, {"label" : "enableCachePersistence", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.enableCachePersistence", "link" : "org\/example\/batch\/package$$BatchToolBox.html#enableCachePersistence:Boolean", "kind" : "lazy val"}, {"label" : "explainExecutionPlan", "tail" : ": Boolean", "member" : "org.example.utils.ConfigurationHelper.explainExecutionPlan", "link" : "org\/example\/batch\/package$$BatchToolBox.html#explainExecutionPlan:Boolean", "kind" : "lazy val"}, {"label" : "properties", "tail" : "(): Array[String]", "member" : "org.example.utils.PropertyHelper.properties", "link" : "org\/example\/batch\/package$$BatchToolBox.html#properties:Array[String]", "kind" : "def"}, {"label" : "csvCharsetEncodingProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvCharsetEncodingProperty", "link" : "org\/example\/batch\/package$$BatchToolBox.html#csvCharsetEncodingProperty:String", "kind" : "lazy val"}, {"label" : "csvDelimiterProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.csvDelimiterProperty", "link" : "org\/example\/batch\/package$$BatchToolBox.html#csvDelimiterProperty:String", "kind" : "lazy val"}, {"label" : "persistenceStorageLevelProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.persistenceStorageLevelProperty", "link" : "org\/example\/batch\/package$$BatchToolBox.html#persistenceStorageLevelProperty:String", "kind" : "val"}, {"label" : "enableCachePersistenceProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.enableCachePersistenceProperty", "link" : "org\/example\/batch\/package$$BatchToolBox.html#enableCachePersistenceProperty:String", "kind" : "val"}, {"label" : "explainExecutionPlanProperty", "tail" : ": String", "member" : "org.example.utils.PropertyHelper.explainExecutionPlanProperty", "link" : "org\/example\/batch\/package$$BatchToolBox.html#explainExecutionPlanProperty:String", "kind" : "val"}, {"label" : "sql", "tail" : ": SQLContext", "member" : "org.example.utils.SessionHandler.sql", "link" : "org\/example\/batch\/package$$BatchToolBox.html#sql:org.apache.spark.sql.SQLContext", "kind" : "lazy val"}, {"label" : "context", "tail" : ": SparkContext", "member" : "org.example.utils.SessionHandler.context", "link" : "org\/example\/batch\/package$$BatchToolBox.html#context:org.apache.spark.SparkContext", "kind" : "lazy val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.utils.SessionHandler.log", "link" : "org\/example\/batch\/package$$BatchToolBox.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/batch\/package$$BatchToolBox.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/batch\/package$$BatchToolBox.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/batch\/package$$BatchToolBox.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/batch\/package$$BatchToolBox.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/batch\/package$$BatchToolBox.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/batch\/package$$BatchToolBox.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/batch\/package$$BatchToolBox.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/package$$BatchToolBox.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/package$$BatchToolBox.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/package$$BatchToolBox.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/batch\/package$$BatchToolBox.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/batch\/package$$BatchToolBox.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/batch\/package$$BatchToolBox.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/batch\/package$$BatchToolBox.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/batch\/package$$BatchToolBox.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/batch\/package$$BatchToolBox.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/example\/batch\/package$$BatchToolBox.html", "kind" : "case class"}, {"name" : "org.example.batch.CSV2Parquet", "shortDescription" : "Read ERP dataset from CSV & rewrite it in Parquet (partition by 'type')", "object" : "org\/example\/batch\/CSV2Parquet$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "org.example.batch.CSV2Parquet.main", "link" : "org\/example\/batch\/CSV2Parquet$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "toolbox", "tail" : ": BatchToolBox", "member" : "org.example.batch.CSV2Parquet.toolbox", "link" : "org\/example\/batch\/CSV2Parquet$.html#toolbox:org.example.batch.BatchToolBox", "kind" : "lazy val"}, {"label" : "stop", "tail" : "(): Unit", "member" : "org.example.types.SparkApp.stop", "link" : "org\/example\/batch\/CSV2Parquet$.html#stop():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "org.example.types.SparkApp.start", "link" : "org\/example\/batch\/CSV2Parquet$.html#start():Unit", "kind" : "def"}, {"label" : "startTimestamp", "tail" : ": Long", "member" : "org.example.types.SparkApp.startTimestamp", "link" : "org\/example\/batch\/CSV2Parquet$.html#startTimestamp:Long", "kind" : "val"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "org.example.types.SparkApp.spark", "link" : "org\/example\/batch\/CSV2Parquet$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "lazy val"}, {"label" : "appName", "tail" : ": String", "member" : "org.example.types.SparkApp.appName", "link" : "org\/example\/batch\/CSV2Parquet$.html#appName:String", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.types.SparkApp.log", "link" : "org\/example\/batch\/CSV2Parquet$.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/batch\/CSV2Parquet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/batch\/CSV2Parquet$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/batch\/CSV2Parquet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/batch\/CSV2Parquet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/batch\/CSV2Parquet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/batch\/CSV2Parquet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/batch\/CSV2Parquet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/CSV2Parquet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/CSV2Parquet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/CSV2Parquet$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/batch\/CSV2Parquet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/batch\/CSV2Parquet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/batch\/CSV2Parquet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/batch\/CSV2Parquet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/batch\/CSV2Parquet$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/batch\/CSV2Parquet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/batch\/CSV2Parquet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/batch\/CSV2Parquet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/batch\/CSV2Parquet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.example.batch.ERPMaxVisitorByStreet2CSV", "shortDescription" : "Process maximum capacity of visitors per street (with or without accommodation)", "object" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "org.example.batch.ERPMaxVisitorByStreet2CSV.main", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "toolbox", "tail" : ": BatchToolBox", "member" : "org.example.batch.ERPMaxVisitorByStreet2CSV.toolbox", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#toolbox:org.example.batch.BatchToolBox", "kind" : "lazy val"}, {"label" : "stop", "tail" : "(): Unit", "member" : "org.example.types.SparkApp.stop", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#stop():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "org.example.types.SparkApp.start", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#start():Unit", "kind" : "def"}, {"label" : "startTimestamp", "tail" : ": Long", "member" : "org.example.types.SparkApp.startTimestamp", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#startTimestamp:Long", "kind" : "val"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "org.example.types.SparkApp.spark", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "lazy val"}, {"label" : "appName", "tail" : ": String", "member" : "org.example.types.SparkApp.appName", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#appName:String", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.types.SparkApp.log", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/batch\/ERPMaxVisitorByStreet2CSV$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.example.types" : [{"name" : "org.example.types.SparkApp", "shortDescription" : "Helper class for Spark jobs", "members_class" : [{"label" : "stop", "tail" : "(): Unit", "member" : "org.example.types.SparkApp.stop", "link" : "org\/example\/types\/SparkApp.html#stop():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "org.example.types.SparkApp.start", "link" : "org\/example\/types\/SparkApp.html#start():Unit", "kind" : "def"}, {"label" : "startTimestamp", "tail" : ": Long", "member" : "org.example.types.SparkApp.startTimestamp", "link" : "org\/example\/types\/SparkApp.html#startTimestamp:Long", "kind" : "val"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "org.example.types.SparkApp.spark", "link" : "org\/example\/types\/SparkApp.html#spark:org.apache.spark.sql.SparkSession", "kind" : "lazy val"}, {"label" : "appName", "tail" : ": String", "member" : "org.example.types.SparkApp.appName", "link" : "org\/example\/types\/SparkApp.html#appName:String", "kind" : "val"}, {"label" : "log", "tail" : ": Logger", "member" : "org.example.types.SparkApp.log", "link" : "org\/example\/types\/SparkApp.html#log:org.apache.log4j.Logger", "kind" : "lazy val"}, {"member" : "org.example.types.SparkApp#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/example\/types\/SparkApp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/example\/types\/SparkApp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/example\/types\/SparkApp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/example\/types\/SparkApp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/example\/types\/SparkApp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/example\/types\/SparkApp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/example\/types\/SparkApp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/types\/SparkApp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/types\/SparkApp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/example\/types\/SparkApp.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/example\/types\/SparkApp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/example\/types\/SparkApp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/example\/types\/SparkApp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/example\/types\/SparkApp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/example\/types\/SparkApp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/example\/types\/SparkApp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/example\/types\/SparkApp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/example\/types\/SparkApp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/example\/types\/SparkApp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/example\/types\/SparkApp.html", "kind" : "class"}], "org" : []};